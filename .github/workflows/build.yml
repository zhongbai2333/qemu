name: Build & Release QEMU

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-linux-x86:
    name: Build ARM64 QEMU on x86_64 Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies (Ubuntu x86_64)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git gcc make pkg-config \
            libglib2.0-dev libpixman-1-dev

      - name: Out‑of‑tree Configure & Build
        run: |
          rm -rf build-linux-x86
          mkdir -p build-linux-x86
          cd build-linux-x86
          ../configure \
            --target-list=aarch64-softmmu \
            --prefix=$PWD/install
          make -j$(nproc)
          make install

      - name: Upload ARM64 build for x86_64
        uses: actions/upload-artifact@v4
        with:
          name: qemu-linux-x86_arm64
          path: build-linux-x86/install/**

  build-linux-arm64:
    name: Build ARM64 QEMU on ARM64 Linux
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies (Ubuntu ARM64)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git gcc make pkg-config \
            libglib2.0-dev libpixman-1-dev

      - name: Out‑of‑tree Configure & Build
        run: |
          rm -rf build-linux-arm64
          mkdir -p build-linux-arm64
          cd build-linux-arm64
          ../configure \
            --target-list=aarch64-softmmu \
            --prefix=$PWD/install
          make -j$(nproc)
          make install

      - name: Upload ARM64 build for ARM64
        uses: actions/upload-artifact@v4
        with:
          name: qemu-linux-arm64_arm64
          path: build-linux-arm64/install/**

  build-macos-arm64:
    name: Build ARM64 QEMU on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Homebrew dependencies
        run: |
          brew update
          brew install pixman

      - name: Out‑of‑tree Configure & Build
        run: |
          rm -rf build-macos-arm64
          mkdir -p build-macos-arm64
          cd build-macos-arm64
          ../configure \
            --target-list=aarch64-softmmu \
            --prefix=$PWD/install
          make -j$(sysctl -n hw.logicalcpu)
          make install

      - name: Upload ARM64 build for macOS
        uses: actions/upload-artifact@v4
        with:
          name: qemu-macos-arm64_arm64
          path: build-macos-arm64/install/**

  build-windows-x86:
    name: Build ARM64 QEMU on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup MSYS2 and install dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-pixman
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-ninja
            git
            mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-ncurses
            mingw-w64-x86_64-bzip2
            mingw-w64-x86_64-gettext-runtime

      - name: Configure & Build (Windows)
        shell: msys2 {0}
        run: |
          rm -rf build-windows-x86
          mkdir build-windows-x86 && cd build-windows-x86
          ../configure --target-list=aarch64-softmmu --prefix=$PWD/install
          make -j$(nproc)
          make install

      - name: Clone msys2‑bundledlls helper
        shell: msys2 {0}
        run: git clone https://github.com/rollerozxa/msys2-bundledlls.git  

      - name: Bundle all runtime DLLs
        shell: msys2 {0}
        run: |
          ./msys2-bundledlls/bundledlls.sh \
            build-windows-x86/install/qemu-system-aarch64.exe \
            build-windows-x86/install/

      - name: Upload ARM64 build for Windows
        uses: actions/upload-artifact@v4
        with:
          name: qemu-windows-x86_arm64
          path: build-windows-x86/install/**


  release:
    if: github.ref_type == 'tag'
    name: Create Release & Upload Binaries
    needs:
      - build-linux-x86
      - build-linux-arm64
      - build-macos-arm64
      - build-windows-x86
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: QEMU Release ${{ github.ref }}

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Upload all builds to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          asset_path: |
            artifacts/qemu-linux-x86_arm64/**
            artifacts/qemu-linux-arm64_arm64/**
            artifacts/qemu-macos-arm64/**
            artifacts/qemu-windows-x86/**
