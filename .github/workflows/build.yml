name: Build & Release QEMU

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - arm-softmmu         # 32-bit ARM
          - aarch64-softmmu     # 64-bit ARM
          - x86_64-softmmu      # 64-bit x86 (AMD64)
    steps:
      - uses: actions/checkout@v3

      - name: Install deps & build (Ubuntu ${{ matrix.target }})
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git gcc make pkg-config \
            libglib2.0-dev libpixman-1-dev
          ./configure --target-list=${{ matrix.target }}
          make -j$(nproc)

      - name: Upload artifact for ${{ matrix.target }}
        uses: actions/upload-artifact@v4
        with:
          name: qemu-${{ matrix.target }}
          path: |
            ${{ matrix.target == 'arm-softmmu' && 'qemu-system-arm' || '' }}
            ${{ matrix.target == 'aarch64-softmmu' && 'qemu-system-aarch64' || '' }}
            ${{ matrix.target == 'x86_64-softmmu' && 'qemu-system-x86_64' || '' }}

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install deps & build (macOS)
        run: |
          brew update
          brew install glib pixman pkg-config
          ./configure --target-list=arm-softmmu
          make -j$(sysctl -n hw.logicalcpu)
      - uses: actions/upload-artifact@v4
        with:
          name: qemu-macos
          path: qemu-system-arm

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      # 1. 安装并设置 MSYS2 环境
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            make
            git
            pkg-config
            mingw-w64-i686-gcc     # 或者其他你需要的包

      # 2. 使用 MSYS2 Bash（而非 PowerShell），并用 ‘nproc’ 获取核心数
      - name: Configure & Build (Windows MSYS2)
        shell: msys2 {0}                                         # ← 指定使用 MSYS2 环境的 Bash  
        run: |
          ./configure --target-list=arm-softmmu
          # nproc 在 MSYS2 下返回可用核心数，可直接用于 -j 参数
          make -j $(nproc)                                       

      # 3. 上传产物
      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: qemu-windows
          path: qemu-system-arm.exe

  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: QEMU Release ${{ github.ref }}

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Upload Linux binaries (ARM32/ARM64/x86_64)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          asset_path: |
            artifacts/qemu-arm-softmmu/qemu-system-arm
            artifacts/qemu-aarch64-softmmu/qemu-system-aarch64
            artifacts/qemu-x86_64-softmmu/qemu-system-x86_64

      - name: Upload macOS binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          asset_path: qemu-system-arm

      - name: Upload Windows binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          asset_path: qemu-system-arm.exe
